{"version":3,"file":"component---src-pages-index-tsx-f0f566643f57112606c2.js","mappings":"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","sources":["webpack://seventwo-devlog/./src/components/BubbleLink.tsx","webpack://seventwo-devlog/./src/components/home/Introduce.tsx","webpack://seventwo-devlog/./src/images/phonescroll.gif","webpack://seventwo-devlog/./src/components/home/Phone.tsx","webpack://seventwo-devlog/./src/components/home/AboutSection.tsx","webpack://seventwo-devlog/./src/components/home/PinterestItem.tsx","webpack://seventwo-devlog/./src/components/home/Pinterest.tsx","webpack://seventwo-devlog/./src/hooks/useDebounce.tsx","webpack://seventwo-devlog/./src/components/home/PostSection.tsx","webpack://seventwo-devlog/./src/pages/index.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\ninterface IBuubleLinkProps {\n  iconClassName: string;\n  bubbleString: string;\n  link: string;\n}\n\nconst BubbleLink = ({ iconClassName, bubbleString, link }: IBuubleLinkProps): JSX.Element => {\n  return (\n    <LinkWrapper>\n      <a href={link} target=\"_blank\" rel=\"noreferrer\">\n        <i className={iconClassName}></i>\n      </a>\n      <div aria-hidden className=\"bubble\">\n        <p className=\"bubble-box bg-soft\">{bubbleString}</p>\n        <div className=\"bubble-pointer bg-soft\"></div>\n      </div>\n    </LinkWrapper>\n  );\n};\n\nconst bubbleFadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50%) scale(0);\n  } to {\n    opacity: 1;\n    transform: translateX(-50%) scale(1);\n  }\n`;\n\nconst LinkWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n  a {\n    font-size: 1.2rem;\n    color: inherit !important;\n  }\n\n  .bubble {\n    display: none;\n    position: absolute;\n    bottom: 150%;\n    left: 50%;\n    transform: translateX(-50%);\n    animation: ${bubbleFadeIn} 0.3s forwards;\n\n    .bubble-box {\n      position: relative;\n      z-index: 2;\n      font-size: 0.9rem;\n      padding: 0.5em;\n      border-radius: 6px;\n    }\n    .bubble-pointer {\n      position: absolute;\n      z-index: 1;\n      bottom: 0;\n      left: 50%;\n      transform: translate3d(-50%, 50%, 0) rotate(45deg);\n      width: 8px;\n      height: 8px;\n    }\n  }\n\n  &:hover {\n    a {\n      opacity: 0.5;\n    }\n    .bubble {\n      display: block;\n    }\n  }\n`;\n\nexport default BubbleLink;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nimport BubbleLink from '@components/BubbleLink';\n\nconst Introduce = (): JSX.Element => {\n  const jiyong = useStaticQuery(graphql`\n    query {\n      file(relativePath: { eq: \"jiyong.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n        }\n      }\n    }\n  `);\n  const jiyongImage = getImage(jiyong.file);\n  if (!jiyongImage) return <></>;\n\n  return (\n    <IntroduceSection>\n      <div className=\"introduce-grid-container\">\n        <GatsbyImage className=\"fluid-image bg-soft\" alt=\"김지용 사진\" image={jiyongImage} />\n        <div className=\"introduce-contents\">\n          <div className=\"introduce-name\">\n            <p className=\"nick-name\">@seventwo</p>\n            <p className=\"real-name\">김지용</p>\n          </div>\n          <p className=\"introduce-description\">🧑‍💻 일단 부딪쳐보는 프론트엔드 개발자입니다.</p>\n          <div className=\"contact-container\">\n            <BubbleLink iconClassName={'fab fa-github'} bubbleString={'github'} link={'https://github.com/jiyong1'} />\n            <BubbleLink\n              iconClassName=\"fas fa-file-alt\"\n              bubbleString=\"notion\"\n              link=\"https://mirror-lamb-c15.notion.site/c0736abeca144edab3de8b6d97ce6957\"\n            />\n            <BubbleLink\n              iconClassName=\"fab fa-instagram\"\n              bubbleString=\"instagram\"\n              link=\"https://www.instagram.com/wldydkim/\"\n            />\n          </div>\n        </div>\n      </div>\n    </IntroduceSection>\n  );\n};\n\nconst IntroduceSection = styled.section`\n  max-width: 600px;\n  margin: 100px auto;\n  .introduce-grid-container {\n    display: grid;\n    padding: 1rem;\n    grid-template-columns: 1fr 2.5fr;\n    align-items: center;\n    .fluid-image {\n      overflow: hidden;\n      border-radius: 50%;\n    }\n  }\n\n  .introduce-contents {\n    padding: 0 2rem;\n\n    > * {\n      margin: 1em 0;\n    }\n\n    .introduce-name {\n      display: flex;\n      align-items: flex-end;\n      .nick-name {\n        font-size: 1.2rem;\n        font-weight: bold;\n      }\n\n      .real-name {\n        font-size: 1rem;\n        padding: 0 0.5em;\n      }\n    }\n    .introduce-description {\n      font-weight: 300;\n      line-height: 1.5;\n    }\n  }\n  .contact-container {\n    display: flex;\n    justify-content: flex-start;\n    gap: 1rem;\n    align-items: center;\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.size.medium}) {\n    .introduce-description {\n      text-align: center;\n    }\n    .introduce-grid-container {\n      display: block;\n\n      .fluid-image {\n        width: 50%;\n        margin: 0 auto;\n      }\n\n      .introduce-name {\n        justify-content: center;\n      }\n    }\n    .contact-container {\n      justify-content: space-around;\n    }\n  }\n`;\n\nexport default Introduce;\n","export default __webpack_public_path__ + \"static/phonescroll-45dc59629a6357d4864dc12fa63c3086.gif\";","import React from 'react';\nimport styled from 'styled-components';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport phoneScroll from '@images/phonescroll.gif';\n\nconst Phone = (): JSX.Element => {\n  const phone = useStaticQuery(graphql`\n    query {\n      file(relativePath: { eq: \"phone.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 200, height: 400, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n        }\n      }\n    }\n  `);\n\n  const phoneImg = getImage(phone.file);\n  if (!phoneImg) return <></>;\n\n  // width 188\n  // left 8\n  // top 8\n  // height: 382\n  return (\n    <PhoneWrapper>\n      <GatsbyImage style={{ position: 'relative', zIndex: 2 }} image={phoneImg} alt=\"핸드폰 레이아웃\"></GatsbyImage>\n      <div className=\"gif-container\">\n        <img src={phoneScroll} alt={'모바일 화면에서 스크롤'} />\n      </div>\n    </PhoneWrapper>\n  );\n};\n\nconst PhoneWrapper = styled.div`\n  position: relative;\n\n  .gif-container {\n    position: absolute;\n    background-color: var(--soft-black);\n    z-index: 1;\n    top: 9px;\n    left: 11px;\n    width: 178px;\n    height: 377px;\n    border-radius: 20px;\n    overflow: hidden;\n    > img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      object-position: left;\n    }\n  }\n`;\n\nexport default Phone;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nimport Phone from '@components/home/Phone';\n\nconst AboutSection = (): JSX.Element => {\n  return (\n    <Section className=\"bg-soft\">\n      <h2>About</h2>\n      <p className=\"about-description\">\n        저를 <span>interactive</span>하게 소개합니다.\n      </p>\n      <div className=\"mac-phone-grid-container\">\n        <Phone />\n      </div>\n      <Link to=\"/about/\">보러가기</Link>\n    </Section>\n  );\n};\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  h2 {\n    font-size: min(9vw, 60px);\n    font-weight: bold;\n    margin: 2rem 0;\n  }\n  .about-description {\n    font-weight: 300;\n    > span {\n      font-size: 1.1rem;\n      font-weight: 400;\n    }\n  }\n  .mac-phone-grid-container {\n    margin: 2rem 0;\n    max-width: 1024px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  > a {\n    font-size: 1.5rem;\n    margin-bottom: 1em;\n  }\n`;\n\nexport default AboutSection;\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nimport { GatsbyImage, getImage, ImageDataLike } from 'gatsby-plugin-image';\nimport { NewspeedQuery } from '../../../graphql-types';\n\ninterface ItemProps {\n  tl?: [number, number];\n  data: DataType;\n}\n\ntype DataType = NewspeedQuery['allMarkdownRemark']['edges'][0]['node']['frontmatter'];\n\nconst PinterestItem = forwardRef<HTMLLIElement, ItemProps>(({ tl = [0, 0], data }, ref): JSX.Element => {\n  if (!data || !data.slug || !data.title || !data.featuredImage || !data.date) return <></>;\n  const image = getImage(data.featuredImage as ImageDataLike);\n  return (\n    <Item ref={ref} style={{ top: `${tl[0]}px`, left: `${tl[1]}px` }}>\n      <div className=\"newspeed-item bg-soft\">\n        <Link to={data.slug}>\n          {image ? (\n            <GatsbyImage className=\"newspeed-image-wrapper\" image={image} alt={data.title} imgClassName=\"bg-normal\" />\n          ) : (\n            <></>\n          )}\n          <div>\n            <p className=\"newspeed-title\">{data.title}</p>\n            <p className=\"newspeed-date\">{data.date}</p>\n          </div>\n        </Link>\n      </div>\n    </Item>\n  );\n});\n\nPinterestItem.displayName = 'PinterestItem';\n\nconst Item = styled.li`\n  width: 25%;\n  padding: 10px;\n  position: absolute;\n\n  .newspeed-item {\n    border-radius: 10px;\n    padding: 0.5rem;\n\n    .newspeed-image-wrapper {\n      border-radius: 6px;\n      overflow: hidden;\n    }\n    .newspeed-title {\n      margin: 1rem 0;\n    }\n    .newspeed-date {\n      font-size: 0.8rem;\n      color: #777 !important;\n    }\n  }\n\n  @media screen and (max-width: 855px) {\n    width: 33.33%;\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.size.medium}) {\n    width: 50%;\n  }\n\n  @media screen and (max-width: 399px) {\n    width: 100%;\n  }\n`;\n\nexport default PinterestItem;\n","import React, { useCallback, useEffect, useRef, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport PinterestItem from './PinterestItem';\nimport useDebounce from '@hooks/useDebounce';\n\nimport { NewspeedQuery } from 'graphql-types';\n\nconst Pinterest = (): JSX.Element => {\n  const [resize, setResize] = useState<boolean>(false);\n  // const [tl, setTl] = useState<[number, number][]>([]);\n  const data: NewspeedQuery = useStaticQuery(graphql`\n    query Newspeed {\n      allMarkdownRemark(limit: 12, sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              title\n              date(formatString: \"MMMM DD, YYYY\")\n              featuredImage {\n                childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH, placeholder: NONE, formats: [AUTO, WEBP, AVIF])\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const posts = useMemo(() => {\n    return data.allMarkdownRemark.edges;\n  }, [data]);\n  const [ulWidth, setUlWidth] = useState<number>(0);\n  const [ulBottom, setUlBottom] = useState<number>(0);\n  const liRef = useRef<number[]>([]);\n\n  const tl = useMemo(() => {\n    let columnCount = 4;\n    if (ulWidth < 400) columnCount = 1;\n    else if (ulWidth < 648) columnCount = 2;\n    else if (ulWidth < 856) columnCount = 3;\n\n    const liWidth = ulWidth / columnCount;\n    const heightStack = Array.from({ length: columnCount }, () => 0);\n    const tlArr = Array.from({ length: liRef.current.length }, () => [0, 0]) as [number, number][];\n    liRef.current.forEach((height, idx) => {\n      const currentMin = Math.min(...heightStack);\n      const minIdx = heightStack.indexOf(currentMin);\n\n      // top\n      tlArr[idx][0] = currentMin;\n\n      // left\n      tlArr[idx][1] = minIdx * liWidth;\n\n      heightStack[minIdx] += height;\n    });\n    setUlBottom(Math.max(...heightStack));\n    return tlArr;\n  }, [ulWidth, resize]);\n\n  const resizeHandler = useDebounce(\n    () => {\n      setResize(false);\n    },\n    100,\n    () => {\n      setResize(true);\n    },\n  );\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeHandler);\n\n    return () => window.removeEventListener('resize', resizeHandler);\n  }, []);\n\n  return (\n    <PinterestWrapper\n      ref={(el) => {\n        if (el) setUlWidth(el.getBoundingClientRect().width);\n      }}\n      style={{\n        opacity: resize ? 0 : 1,\n        marginBottom: `${ulBottom}px`,\n      }}\n    >\n      {posts.map(({ node }, idx) => (\n        <PinterestItem\n          ref={(el) => {\n            if (el) {\n              liRef.current[idx] = el.getBoundingClientRect().height;\n            }\n          }}\n          tl={tl[idx]}\n          key={`pin-${node.frontmatter?.title}`}\n          data={node.frontmatter}\n        />\n      ))}\n    </PinterestWrapper>\n  );\n};\n\nconst PinterestWrapper = styled.ul`\n  position: relative;\n  list-style: none;\n  padding: 0;\n  max-width: 1024px;\n  width: 100%;\n  margin: 1rem auto;\n`;\n\nexport default Pinterest;\n","import { useMemo } from 'react';\n\nexport default function useDebounce(cb: () => void, delay: number, preCb?: () => void): () => void {\n  const returnFunction = useMemo(() => {\n    let timeout: ReturnType<typeof setTimeout> | null = null;\n\n    return () => {\n      if (preCb) preCb();\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      timeout = setTimeout(() => {\n        cb();\n        timeout = null;\n      }, delay);\n    };\n  }, []);\n\n  return returnFunction;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nimport Pinterest from './Pinterest';\n\nconst PostSection = (): JSX.Element => {\n  return (\n    <Section>\n      <h2>Posts</h2>\n      <p className=\"post-description\">매일 배운 내용을 정리 및 기록합니다.</p>\n      <h3>새로운 게시물</h3>\n      <Pinterest />\n      <Link className=\"categories-btn bg-soft not-hover\" to=\"/categories/\">\n        더 보러가기\n      </Link>\n    </Section>\n  );\n};\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  > h2 {\n    font-size: min(9vw, 60px);\n    font-weight: bold;\n    margin: 2rem 0;\n  }\n  .post-description {\n    font-weight: 300;\n  }\n  > h3 {\n    font-size: 1.5rem;\n    margin-top: 2em;\n  }\n  .categories-btn {\n    font-size: 1.2rem;\n    padding: 1em;\n    border-radius: 10px;\n\n    &:hover {\n      opacity: 0.6;\n    }\n  }\n`;\n\nexport default PostSection;\n","import React from 'react';\nimport BaseLayout from '@layouts/base';\n\nimport Introduce from '@components/home/Introduce';\nimport AboutSection from '@components/home/AboutSection';\nimport PostSection from '@components/home/PostSection';\n\nconst Index = (): JSX.Element => {\n  return (\n    <BaseLayout maxWidth=\"100%\" title=\"홈\" description=\"프론트엔드 개발자의 블로그\">\n      <Introduce />\n      <AboutSection />\n      <PostSection />\n    </BaseLayout>\n  );\n};\n\nexport default Index;\n"],"names":["bubbleFadeIn","keyframes","LinkWrapper","styled","iconClassName","bubbleString","link","href","target","rel","className","IntroduceSection","theme","size","medium","jiyong","useStaticQuery","jiyongImage","getImage","file","G","alt","image","PhoneWrapper","phone","phoneImg","style","position","zIndex","src","phoneScroll","Section","to","PinterestItem","forwardRef","ref","tl","data","slug","title","featuredImage","date","Item","top","left","imgClassName","displayName","PinterestWrapper","cb","delay","preCb","useState","resize","setResize","posts","useMemo","allMarkdownRemark","edges","ulWidth","setUlWidth","ulBottom","setUlBottom","liRef","useRef","columnCount","liWidth","heightStack","Array","from","length","tlArr","current","forEach","height","idx","currentMin","Math","min","minIdx","indexOf","max","resizeHandler","timeout","clearTimeout","setTimeout","useEffect","window","addEventListener","removeEventListener","el","getBoundingClientRect","width","opacity","marginBottom","map","node","key","frontmatter","maxWidth","description"],"sourceRoot":""}