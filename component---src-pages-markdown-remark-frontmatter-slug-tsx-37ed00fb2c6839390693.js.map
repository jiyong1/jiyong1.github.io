{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-tsx-37ed00fb2c6839390693.js","mappings":"gNAGe,SAASA,EAAT,GAA4E,IAAzDC,EAAwD,EAAxDA,SAChC,GAAwB,oBAAbC,SAA0B,OAAO,iCAC5C,IAAMC,EAAaD,SAASE,eAAe,kBAC3C,IAAKD,EAAY,MAAM,IAAIE,MAAM,qBAEjC,OAAOC,EAAAA,aAAsBL,EAAUE,EACxC,CCND,IAaMI,EAAeC,EAAAA,QAAAA,OAAAA,WAAH,mEAAGA,CAAH,gEAOlB,EApBkB,WAChB,IAAMC,GAAmBC,EAAAA,EAAAA,cAAY,WAEnCC,SAAS,EAAG,EACb,GAAE,IAEH,OACE,gBAACJ,EAAD,CAAcK,QAASH,EAAkBI,UAAU,YACjD,qBAAGA,UAAU,sBAGlB,ECKD,EAdY,WACV,OACE,gCACGb,EACC,gBAACA,EAAD,KACE,gBAAC,EAAD,OAGF,iCAIP,ECVKc,EAAyCC,EAAAA,MAAW,YAAsB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3DC,GAAeC,EAAAA,EAAAA,aAsBrB,OApBAC,EAAAA,EAAAA,kBAAgB,WAAO,IAAD,EACdC,EAAanB,SAASoB,cAAc,UAEpCC,EAAa,CACjBC,IAAK,gCACLR,KAAAA,EACAC,MAAAA,EACA,aAAc,WACdQ,MAAO,iBACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQN,GAAYO,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDX,EAAWY,aAAaF,EAAKC,EAC9B,IAED,UAAAd,EAAagB,eAAb,SAAsBC,YAAYd,EACnC,GAAE,CAACL,IAEG,uBAAKoB,IAAKlB,GAClB,IAEDJ,EAAWuB,YAAc,aAEzB,QCde,SAASC,EAAT,GAA6D,IAClEC,EADiE,EAAxCC,KACzBD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,gBAAC,IAAD,CACEC,SAAS,QACTC,MAAOH,EAAYG,MACnBC,YAAaJ,EAAYI,YACzBC,KAAM,IAAIC,KAAKN,EAAYK,MAAME,YAEjC,uBAAKnC,UAAU,uBACb,gBAACoC,EAAD,CAAMpC,UAAU,aACd,uBAAKA,UAAU,aACb,sBAAIA,UAAU,eAAe4B,EAAYG,OACzC,sBAAI/B,UAAU,aAAa4B,EAAYK,OAEzC,gBAACI,EAAD,CAAarC,UAAU,oBAAoBsC,wBAAyB,CAAEC,OAAQV,OAGlF,gBAAC,EAAD,MACA,gBAAC,EAAD,CAAY1B,KAAK,4BAA4BC,MAAM,2BAGxD,CAED,IAAMgC,EAAOzC,EAAAA,QAAAA,IAAAA,WAAH,iFAAGA,CAAH,0IAeJ0C,EAAc1C,EAAAA,QAAAA,IAAAA,WAAH,wFAAGA,CAAH,mf","sources":["webpack://seventwo-devlog/./src/components/SNB/SNBRoot.tsx","webpack://seventwo-devlog/./src/components/SNB/SNBTopBtn.tsx","webpack://seventwo-devlog/./src/components/SNB/index.tsx","webpack://seventwo-devlog/./src/components/Utterances.tsx","webpack://seventwo-devlog/./src/pages/{MarkdownRemark.frontmatter__slug}.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default function SNBRoot({ children }: { children: React.ReactNode }): JSX.Element {\n  if (typeof document === 'undefined') return <></>;\n  const portalRoot = document.getElementById('side__nav--bar');\n  if (!portalRoot) throw new Error('portal rootê°€ ì—†ìŠµë‹ˆë‹¤');\n\n  return ReactDOM.createPortal(children, portalRoot);\n}\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\n\nconst SNBTopBtn = (): JSX.Element => {\n  const scrollTopHandler = useCallback(() => {\n    // eslint-disable-next-line no-restricted-globals\n    scrollTo(0, 0);\n  }, []);\n\n  return (\n    <ScrollTopBtn onClick={scrollTopHandler} className=\"bg-brown\">\n      <i className=\"fas fa-chevron-up\"></i>\n    </ScrollTopBtn>\n  );\n};\n\nconst ScrollTopBtn = styled.button`\n  font-size: 1.5rem;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n`;\n\nexport default SNBTopBtn;\n","import React from 'react';\n\nimport SNBRoot from './SNBRoot';\nimport SNBTopBtn from './SNBTopBtn';\n\nconst SNB = (): JSX.Element => {\n  return (\n    <>\n      {SNBRoot ? (\n        <SNBRoot>\n          <SNBTopBtn />\n        </SNBRoot>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default SNB;\n","import React, { createRef, useLayoutEffect } from 'react';\n\nexport interface IUtterancesProps {\n  repo: string;\n  theme: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\n  const containerRef = createRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement('script');\n\n    const attributes = {\n      src: 'https://utteranc.es/client.js',\n      repo,\n      theme,\n      'issue-term': 'pathname',\n      label: 'âœ¨ðŸ’¬ comments âœ¨',\n      crossOrigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current?.appendChild(utterances);\n  }, [repo]);\n\n  return <div ref={containerRef} />;\n});\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;\n","import React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport styled from 'styled-components';\n\nimport BaseLayout from '@layouts/base';\nimport SNB from '@components/SNB';\nimport Utterances from '@components/Utterances';\n\ninterface MarkdownPageProps extends PageProps {\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        title: string;\n        date: string;\n        description: string;\n      };\n      html: string;\n    };\n  };\n}\n\nexport default function Template({ data }: MarkdownPageProps): JSX.Element {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <BaseLayout\n      maxWidth=\"726px\"\n      title={frontmatter.title}\n      description={frontmatter.description}\n      date={new Date(frontmatter.date).toString()}\n    >\n      <div className=\"blog-post-container\">\n        <Post className=\"blog-post\">\n          <div className=\"post-info\">\n            <h1 className=\"post-header\">{frontmatter.title}</h1>\n            <h2 className=\"post-date\">{frontmatter.date}</h2>\n          </div>\n          <PostContent className=\"blog-post-content\" dangerouslySetInnerHTML={{ __html: html }} />\n        </Post>\n      </div>\n      <SNB />\n      <Utterances repo=\"jiyong1/jiyong1.github.io\" theme=\"preferred-color-scheme\" />\n    </BaseLayout>\n  );\n}\n\nconst Post = styled.div`\n  padding: 0 0.5rem;\n  .post-header {\n    font-size: 1.6rem;\n    font-weight: bold;\n  }\n  .post-date {\n    color: #666;\n  }\n  .post-info {\n    margin: 1.5rem 0;\n    line-height: 1.3;\n  }\n`;\n\nconst PostContent = styled.div`\n  * {\n    line-height: 1.6;\n    font-weight: 300;\n  }\n  > * {\n    margin: 1em 0;\n  }\n  strong {\n    font-weight: bold;\n  }\n  ol,\n  ul {\n    padding-inline-start: 1.2em;\n  }\n\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: bold;\n  }\n\n  h2 {\n    font-size: 1.5rem;\n  }\n\n  h3 {\n    font-size: 1.3rem;\n  }\n\n  code,\n  pre {\n    font-size: 0.9em !important;\n  }\n  blockquote {\n    border-left-width: 3px;\n    border-left-style: solid;\n    font-size: 0.9rem;\n    padding: 0.5em 0 0.5em 1em;\n    color: #999;\n  }\n  table {\n    width: 100%;\n    border-radius: 6px;\n  }\n  tbody {\n    tr {\n      border-top: 1px solid;\n    }\n  }\n  thead {\n    font-weight: bold;\n  }\n  td,\n  th {\n    padding: 0.5em;\n  }\n  td:nth-of-type(n + 2) {\n    border-left: 1px solid;\n  }\n`;\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        description\n      }\n    }\n  }\n`;\n"],"names":["SNBRoot","children","document","portalRoot","getElementById","Error","ReactDOM","ScrollTopBtn","styled","scrollTopHandler","useCallback","scrollTo","onClick","className","Utterances","React","repo","theme","containerRef","createRef","useLayoutEffect","utterances","createElement","attributes","src","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","Template","markdownRemark","data","frontmatter","html","maxWidth","title","description","date","Date","toString","Post","PostContent","dangerouslySetInnerHTML","__html"],"sourceRoot":""}